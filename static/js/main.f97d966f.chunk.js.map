{"version":3,"sources":["reportWebVitals.ts","FileGetter.tsx","Player.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FileGetter","handleFileSelected","e","chosenfile","target","files","undefined","props","parentCallback","onChange","this","type","accept","React","Component","Player","componentDidMount","movie","renderTo","id","width","height","App","client","_toMovieSession","file","torrentcode","navigate","btoa","toMovieSession","torrent","console","info","find","name","endsWith","Error","magnetURI","log","path","seedFile","seed","WebTorrent","params","torrentID","atob","add","player","filegetter","className","WithNavigateApp","useNavigate","useParams","ReactDOM","render","StrictMode","element","document","getElementById"],"mappings":"+tCAceA,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4FCUCQ,E,4MAPXC,mBAAqB,SAACC,GAA4C,IAAD,EACzDC,EAAU,UAAGD,EAAEE,OAAOC,aAAZ,aAAG,EAAiB,QACfC,IAAfH,GACJ,EAAKI,MAAMC,eAAeL,I,4CAP9B,WACI,OAAO,uBAAOM,SAAUC,KAAKT,mBAAoBU,KAAK,OAAOC,OAAO,sC,GAFnDC,IAAMC,WCWhBC,E,4MATXC,kBAAoB,WAChB,EAAKT,MAAMU,MAAMC,SAAS,iB,4CAL9B,WACI,OAAO,uBAAOC,GAAG,SAASC,MAAO,IAAKC,OAAQ,U,GAFjCR,IAAMC,WCWrBQ,E,kDAmBJ,WAAYf,GAAa,IAAD,EAGtB,GAHsB,qBACtB,cAAMA,IAHRgB,YAEwB,IADxBN,WACwB,IAaxBO,gBAAkB,SAACC,EAAoBC,GACrC,EAAKT,MAAQQ,EACb,EAAKlB,MAAMoB,SAAX,gBAA6BC,KAAKF,MAfZ,EAmBxBG,eAAiB,SAACC,GAChBC,QAAQC,KAAK,mBAAoBF,GACjC,IAAIL,EAAOK,EAAQzB,MAAM4B,MAAK,SAAAR,GAAI,OAAIA,EAAKS,KAAKC,SAAS,WACzD,QAAa7B,IAATmB,EAAoB,MAAMW,MAAM,qCACpC,EAAKZ,gBAAgBC,EAAMK,EAAQO,WACnCN,QAAQO,IAAI,gBAAiBR,EAAQS,KAAMT,IAxBrB,EA2BxBU,SAAW,SAACf,GACVM,QAAQC,KAAK,uBAAwBP,GACrC,EAAKF,OAAOkB,KAAKhB,EAAM,EAAKI,iBA3B5B,EAAKN,OAAS,IAAImB,IACd,EAAKnC,MAAMoC,OAAOjB,YAAa,CACjC,IAAIkB,EAAYC,KAAK,EAAKtC,MAAMoC,OAAOjB,aACvCK,QAAQC,KAAK,qBAAsBY,GACnC,EAAK3B,MAAQ,UACb,EAAKM,OAAOuB,IAAIF,EAAW,EAAKf,qBAEhC,EAAKZ,WAAQX,EATO,S,0CAlBxB,WAA2B,IACnByC,EAAsE,KAA9DC,EAAoE,KAClF,OAAQtC,KAAKO,OACX,IAAK,UAAW,MAChB,UAAKX,EAAYyC,EAAwB,KAAhBC,EAAsB,cAAC,EAAD,CAAYxC,eAAgBE,KAAK8B,WAAe,MAC/F,QAAUO,EAAuB,cAAC,EAAD,CAAQ9B,MAAOP,KAAKO,QAAnC+B,EAA6C,KAGjE,OACE,sBAAK7B,GAAG,MAAM8B,UAAU,MAAxB,UACID,EACAD,S,GAZQlC,IAAMC,WA+DToC,MANf,SAAyB3C,GACvB,IAAIoB,EAAWwB,cACXR,EAASS,cACb,OAAO,cAAC,EAAD,2BAAS7C,GAAT,IAAgBoB,SAAUA,EAAUgB,OAAQA,MCnErDU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOhB,KAAK,IAAIiB,QAAS,cAAC,EAAD,IAAzB,SACE,cAAC,IAAD,CAAOjB,KAAK,sBAAsBiB,QAAS,eAKjDC,SAASC,eAAe,SAM1BnE,M","file":"static/js/main.f97d966f.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\n\r\ntype Props = {\r\n    parentCallback: (_ : File) => void;\r\n}\r\n\r\n// index\r\nclass FileGetter extends React.Component<Props> {\r\n    render(): React.ReactNode {\r\n        return <input onChange={this.handleFileSelected} type=\"file\" accept=\"video/mp4,video/x-m4v,video/*\" />\r\n    }\r\n\r\n    handleFileSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let chosenfile = e.target.files?.[0]\r\n        if (chosenfile === undefined) return;\r\n        this.props.parentCallback(chosenfile)\r\n    }\r\n}\r\n\r\nexport default FileGetter\r\n  ","\r\nimport React from 'react';\r\nimport{ TorrentFile } from 'webtorrent';\r\n\r\nclass Player extends React.Component<Props> {\r\n    render() {\r\n        return <video id='player' width={800} height={500}></video>\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.movie.renderTo('video#player')\r\n    }\r\n}\r\n\r\ntype Props = {\r\n    movie : TorrentFile\r\n}\r\n\r\nexport default Player\r\n  ","import React, { ReactElement } from 'react';\nimport './App.css';\nimport WebTorrent  from 'webtorrent'\nimport { Instance as WebTorrentInstance } from 'webtorrent'\nimport { Torrent, TorrentFile } from 'webtorrent'\n// import { Instance as SimplePeer } from 'simple-peer';\nimport FileGetter from './FileGetter';\nimport { NavigateFunction, Params, useNavigate, useParams } from 'react-router-dom';\nimport Player from './Player';\n\n// A group of peers discovered each other through a torrent file/magnet link\n// class PeerGroup {}\n\ntype MovieStatus = undefined | 'loading' | TorrentFile\n\nclass App extends React.Component<Props> {\n  render(): React.ReactNode {\n    let [ player, filegetter ] : [null | ReactElement, null | ReactElement ] = [null, null];\n    switch (this.movie) {\n      case 'loading': break;\n      case undefined: [player, filegetter] = [ null, <FileGetter parentCallback={this.seedFile}/> ]; break;\n      default: [player, filegetter] = [<Player movie={this.movie}/>, null]; break;\n    }\n    \n    return (\n      <div id=\"app\" className=\"App\">\n        { filegetter }\n        { player }\n      </div>\n    )\n  }\n\n  client : WebTorrentInstance;\n  movie : MovieStatus\n  constructor(props : any){\n    super(props)\n    this.client = new WebTorrent()\n    if (this.props.params.torrentcode) {\n      let torrentID = atob(this.props.params.torrentcode)\n      console.info('Asking for torrent', torrentID)\n      this.movie = 'loading'\n      this.client.add(torrentID, this.toMovieSession)\n    } else {\n      this.movie = undefined\n    }\n  }\n\n  _toMovieSession = (file : TorrentFile, torrentcode : string) => {\n    this.movie = file;\n    this.props.navigate(`movie/${btoa(torrentcode)}`);\n  }\n\n  \n  toMovieSession = (torrent : Torrent) => {\n    console.info('To movie session', torrent)\n    let file = torrent.files.find(file => file.name.endsWith('.mp4'))\n    if (file === undefined) throw Error('Cannot find a mp4 file in torrent')\n    this._toMovieSession(file, torrent.magnetURI)\n    console.log('debug torrent', torrent.path, torrent)\n  }\n\n  seedFile = (file : File) => {\n    console.info(\"Parsing file to seed\", file)\n    this.client.seed(file, this.toMovieSession)\n  }\n}\n\ntype Props = {\n  navigate : NavigateFunction,\n  params : Readonly<Params<string>>\n}\n\nfunction WithNavigateApp(props : any) {\n  let navigate = useNavigate();\n  let params = useParams();\n  return <App {...props} navigate={navigate} params={params}/>\n}\n\nexport default WithNavigateApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport WithNavigateApp from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Routes>\n      <Route path='/' element={<WithNavigateApp/>}>\n        <Route path='/movie/:torrentcode' element={null}></Route>\n      </Route>\n    </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}